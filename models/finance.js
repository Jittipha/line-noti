const mongoose = require('mongoose')

const financeSchema = new mongoose.Schema({
    AGE : {type : String} ,
    AMOUNT : {type : Number} ,
    AN : {type : String} ,
    CASH_NOT_RETURN : {type : Number} ,
    CASH_RETURN : {type : Number} ,
    CLAIM : {type : Number} ,
    COPAY : {type : Number} ,
    DATE_ACCEPTED : {type : Date} ,
    DATE_CREATED : {type : Date} ,
    DATE_DISPENSED : {type : Date} ,
    DATE_MODIFIED : {type : Date} ,
    DATE_PAYABLED : {type : Date} ,
    DATE_PREPARED : {type : Date} ,
    DATE_STATUSED : {type : Date} ,
    DISCOUNT : {type : Number} ,
    DOC_REMARK : {type : String} ,
    DOCTOR_DONE_FLAG : {type : String} ,
    EXPENSE_NAME : {type : String} ,
    FINANCE_TYPE : {type : String} ,
    GENDER : {type : String} ,
    HN : {type : String} ,
    ORDER_DATE : {type : Date} ,
    ORDER_REMARK : {type : String} ,
    ORDER_TIME : {type : String} ,
    PRICE : {type : Number} ,
    QUANTITY : {type : Number} ,
    QUEUE_BRANCH : {type : String} ,
    QUEUE_NO : {type : String} ,
    READING_FLAG : {type : String} ,
    RECEIVE : {type : String} ,
    REFILL_ID : {type : String} ,
    RETURN_QTY : {type : String} ,
    ROBOT_STATUS : {type : String} ,
    ROOT_CLAIM : {type : String} ,
    ROOT_COPAY : {type : String} ,
    ROOT_PRICE : {type : String} ,
    ROOT_QTY : {type : String} ,
    RUN_AN : {type : String} ,
    RUN_HN : {type : String} ,
    STATUS : {type : String} ,
    YEAR_AN : {type : String} ,
    YEAR_HN : {type : String} ,
    APPOINT_ID: { type: mongoose.Schema.Types.ObjectId, ref: 'appoint', requied: true },
    DOCTOR: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    CLINIC_ID: { type: mongoose.Schema.Types.ObjectId, ref: 'opd_clinic', requied: true },
    // OPD_RIGHT_ID: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    ORDER_ID: {type : String,required  : true},
    PATIENT_ID: { type: mongoose.Schema.Types.ObjectId, ref: 'patient', requied: true },
    // RIGHT_ID: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_STATUSED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_PREPARED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_DISPENSED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_MODIFIED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_PAYABLED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_CREATED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_CHECKED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_ADR: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    USER_ACCEPTED: { type: mongoose.Schema.Types.ObjectId, ref: 'user', requied: true },
    DRUG_WARNING : {type : String} ,
    DRUG_USING : {type : String} ,
    DRUG_TIMING : {type : String} ,
    DRUG_PROPERTY : {type : String} ,
    DRUG_PROFILE_ID : {type : String} ,
    DRUG_LABEL : {type : String} ,
    GENERIC : {type : String} ,
    
    DATE_CREATED: {
        type: Date,
        immutable: true,
        default: () => Date.now(),

    },
    DATE_MODIFIED: {
        type: Date,
        default: () => Date.now()
    }
})

module.exports = mongoose.model('finance',financeSchema)